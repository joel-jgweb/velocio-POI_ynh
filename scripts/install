#!/bin/bash

# Charge les helpers YunoHost pour les fonctions utilitaires
source /usr/share/yunohost/helpers || {
    echo "❌ Impossible de charger les helpers YunoHost."
    exit 1
}

# Variables YunoHost transmises à l'installation
app=${YNH_APP_INSTANCE_NAME}
domain=${YNH_APP_ARG_DOMAIN}
path=${YNH_APP_ARG_PATH}
is_public=${YNH_APP_ARG_IS_PUBLIC}

final_path="/var/www/$app"

# 1. Copie le code applicatif depuis la racine du dépôt
mkdir -p "$final_path"
cp -a "$PWD/velocio-POI" "$final_path/"

# 2. Installe les dépendances Python (si requirements.txt existe)
if [ -f "$final_path/velocio-POI/requirements.txt" ]; then
    pip3 install -r "$final_path/velocio-POI/requirements.txt"
fi

# 3. Crée le service systemd pour l'app Flask
cat > /etc/systemd/system/${app}.service <<EOF
[Unit]
Description=Velocio POI Flask App (YunoHost)
After=network.target

[Service]
User=yunohost   # Utilisateur d'exécution. Adapte si besoin (www-data si tu préfères)
WorkingDirectory=${final_path}/velocio-POI/src
ExecStart=/usr/bin/python3 server.py
Restart=always

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable ${app}
systemctl start ${app}

# 4. Génère la config nginx pour proxy_pass sur le port 5000
nginx_conf="/etc/nginx/conf.d/${domain}.d/${app}.conf"
mkdir -p "/etc/nginx/conf.d/${domain}.d"
cat > "$nginx_conf" <<EOF
location ${path}/ {
    proxy_pass http://127.0.0.1:5000/;
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto \$scheme;
}
EOF

systemctl reload nginx

echo "✅ Velocio Traces & Spots installé et démarré sur http://$domain$path"